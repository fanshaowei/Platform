<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">

    <context:property-placeholder location="classpath:jdbc.properties,classpath:redis.properties"/>		
	
	<!--配置数据源  -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
         <property name="user" value="${jdbc.username}"></property>
         <property name="password" value="${jdbc.password}"></property>
         <property name="driverClass" value="${jdbc.driver}"></property>
         <property name="jdbcUrl" value="${jdbc.url}"></property>
         <property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
         <property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
         <property name="initialPoolSize" value="${jdbc.initialPoolSize}"></property>
         <!-- <property name="maxIdleTime" value="${jdbc.maxIdleTime}"></property> -->
         <!-- <property name="automaticTestTable" value="${jdbc.automaticTestTable}"></property> -->
         <!-- <property name="preferredTestQuery" value="${jdbc.preferredTestQuery}"></property> -->
         <property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"></property>
         <property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
         <property name="acquireRetryAttempts" value="${jdbc.acquireRetryAttempts}"></property>         
    </bean>
    
    <!-- 配置Jdbc模板 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"></property>
	    <property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"></property>
	    <!-- 如果mppper类和xml文件不在同一个包下，就要配置mapplocations 指向xml文件存放的class路径 -->
	    <!-- <property name="mapperLocations"  value="classpath:cn/com/chengzi/framework/mapper/xml/*.xml"></property> -->
	    <property name="mapperLocations" value="classpath:cn/com/chengzi/framework/**/mapper/xml/*.xml"></property>	    
	</bean>
	<!-- MapperScannerConfigurer会自动扫描basePackage指定的包，找到映射接口类和映射XML文件 ,并进行注入-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="cn.com.chengzi.framework.**.mapper"></property>
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	 <!--配置redis  -->
	<!-- <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	    <property name="maxIdle" value="${redis.pool.maxIdle}"></property>
	    <property name="maxTotal" value="${redis.pool.maxTotal}"></property>
	    <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"></property> 
	    <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"></property>
	    <property name="testOnReturn" value="${redis.pool.testOnReturn}"></property>
	</bean>
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
	    p:hostName="${redis.ip}" p:port="${redis.port}" p:poolConfig-ref="jedisPoolConfig">
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
	    <property name="connectionFactory" ref="jedisConnectionFactory"></property>
	</bean> -->
	
<!-- 	<import resource="classpath*:spring/applicationContext-redis.xml"/>
	<import resource="classpath*:spring/applicationContext-transaction.xml"/>
	<import resource="classpath*:spring/applicationContext-security.xml"/>
	<import resource="classpath*:spring/applicationContext-service.xml"/> -->
	
	<!--HibernateFactory  -->
    <!-- <bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>        
        <property name="hibernateProperties">
             <props>
                 <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                 <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
             </props>           
        </property>
        <property name="packagesToScan" value="cn.com.chengzi.**.model"></property>
    </bean> -->
	
	
	
	 <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="persistenceXmlLocation" value="classpath:hibernate/persistence.xml"></property>  
        <property name="jpaProperties">  
            <props>  
              <!--   <prop key="hibernate.connection.driver_class">${jdbc.driver}</prop>  -->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>  
                <prop key="javax.persistence.validation.mode">none</prop>  
            </props>  
        </property>  
    </bean> 
	
	
	<!--引入webservice配置文件  -->
	<import resource="classpath*:webservice/webservice-soap.xml" />
	<import resource="classpath*:webservice/webservice-rest.xml" />
</beans>
